[{"/home/json/Repos/FluentTrivia/client/src/index.tsx":"1","/home/json/Repos/FluentTrivia/client/src/reportWebVitals.ts":"2","/home/json/Repos/FluentTrivia/client/src/App.tsx":"3","/home/json/Repos/FluentTrivia/client/src/components/QuestionPreview.tsx":"4","/home/json/Repos/FluentTrivia/client/src/mockData/DemoQuestions.tsx":"5","/home/json/Repos/FluentTrivia/client/src/components/QuestionDisplay.tsx":"6","/home/json/Repos/FluentTrivia/client/src/components/Header.tsx":"7"},{"size":500,"mtime":1609890842335,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1609890842339,"results":"10","hashOfConfig":"9"},{"size":764,"mtime":1610112987269,"results":"11","hashOfConfig":"9"},{"size":801,"mtime":1609911835024,"results":"12","hashOfConfig":"9"},{"size":2784,"mtime":1609908360757,"results":"13","hashOfConfig":"9"},{"size":1584,"mtime":1609978500745,"results":"14","hashOfConfig":"9"},{"size":715,"mtime":1610112915073,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"13lkm9f",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/json/Repos/FluentTrivia/client/src/index.tsx",[],["33","34"],"/home/json/Repos/FluentTrivia/client/src/reportWebVitals.ts",[],"/home/json/Repos/FluentTrivia/client/src/App.tsx",["35","36","37","38","39"],"/home/json/Repos/FluentTrivia/client/src/components/QuestionPreview.tsx",[],["40","41"],"/home/json/Repos/FluentTrivia/client/src/mockData/DemoQuestions.tsx",[],"/home/json/Repos/FluentTrivia/client/src/components/QuestionDisplay.tsx",["42","43"],"import React from 'react'\nimport { Question } from './Question'\nimport CSS from 'csstype'\n\nexport type QuestionDisplayProps = {\n  question: Question\n  questionHandler?: () => boolean\n}\n\nconst styles: CSS.Properties = {\n  margin: '20px'\n}\n\ntype Answer = {\n  description: string\n  correct: boolean\n}\n\nexport const QuestionDisplay = ({ question, questionHandler }: QuestionDisplayProps) => {\n  const randomizeElements = (arr: [Answer]) => {\n\n    let randomIndex = Math.floor(Math.random() * Math.floor(arr.length))\n    let randomized: [Answer] = [arr[randomIndex]]\n    arr.splice(randomIndex, 1)\n\n    console.log(arr)\n\n    while (arr.length > 0) {\n      randomIndex = Math.floor(Math.random() * Math.floor(arr.length))\n      randomized.push(arr[randomIndex])\n      arr.splice(randomIndex, 1)\n    }\n\n    return randomized\n  }\n\n  const compileAnswers = (question: Question) => {\n    let answers: [Answer] = [\n      {\n        description: question.correct_answer,\n        correct: true\n      }\n    ]\n\n    question.incorrect_answers.map((answer) => {\n      answers.push(\n        {\n          description: answer,\n          correct: false\n        }\n      )\n    })\n\n    return answers\n  }\n\n  const randomizedAnswers = randomizeElements(compileAnswers(question))\n\n  return (\n    <div style={styles}>\n      <span>{question.question}</span>\n      <ul>\n        {/* workitem: randomize the display of correct v. incorrect */}\n        <li>{question.correct_answer}</li>\n        {question.incorrect_answers.map((answer) => {\n          return <li>{answer}</li>\n        })}\n      </ul>\n    </div>\n  )\n}\n","/home/json/Repos/FluentTrivia/client/src/components/Header.tsx",["44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":3,"column":10,"nodeType":"51","messageId":"52","endLine":3,"endColumn":25},{"ruleId":"49","severity":1,"message":"53","line":16,"column":10,"nodeType":"51","messageId":"52","endLine":16,"endColumn":19},{"ruleId":"49","severity":1,"message":"54","line":16,"column":21,"nodeType":"51","messageId":"52","endLine":16,"endColumn":33},{"ruleId":"49","severity":1,"message":"55","line":17,"column":27,"nodeType":"51","messageId":"52","endLine":17,"endColumn":45},{"ruleId":"49","severity":1,"message":"56","line":19,"column":9,"nodeType":"51","messageId":"52","endLine":19,"endColumn":24},{"ruleId":"45","replacedBy":"57"},{"ruleId":"47","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":45,"column":45,"nodeType":"61","messageId":"62","endLine":45,"endColumn":47},{"ruleId":"49","severity":1,"message":"63","line":57,"column":9,"nodeType":"51","messageId":"52","endLine":57,"endColumn":26},{"ruleId":"49","severity":1,"message":"64","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":11},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"@typescript-eslint/no-unused-vars","'QuestionPreview' is defined but never used.","Identifier","unusedVar","'questions' is assigned a value but never used.","'setQuestions' is assigned a value but never used.","'setCurrentQuestion' is assigned a value but never used.","'questionDisplay' is assigned a value but never used.",["65"],["66"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'randomizedAnswers' is assigned a value but never used.","'CSS' is defined but never used.","no-global-assign","no-unsafe-negation"]